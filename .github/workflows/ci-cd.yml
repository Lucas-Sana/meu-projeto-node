name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Executa o pipeline quando houver push na branch main
  pull_request:
    branches:
      - main  # Executa o pipeline quando houver um pull request para a branch main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Checkout do código
      - name: Checkout code
        uses: actions/checkout@v3

      # Passo 2: Configurar Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Use a versão do Node.js que você precisa

      # Passo 3: Instalar dependências
      - name: Install dependencies
        run: npm install

      # Passo 4: Rodar testes
      - name: Run tests
        run: npm test

      # Passo 5: Build do projeto com Webpack
      - name: Build project
        run: npm run build

      # Passo 6: Deploy na AWS (opcional, se necessário)
      - name: Deploy to AWS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          echo "Instalando Terraform..."
          curl -LO https://releases.hashicorp.com/terraform/1.5.7/terraform_1.5.7_linux_amd64.zip
          unzip terraform_1.5.7_linux_amd64.zip -d /usr/local/bin
          rm terraform_1.5.7_linux_amd64.zip

          echo "Inicializando e aplicando o Terraform..."
          terraform init
          terraform apply -auto-approve
